{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "4.0.0.0",
    "parameters": {
        "hubvnetname": {
            "type": "string",
            "defaultValue": "HUB-VNET",
            "metadata": {
                "description": "Name of Hub Virtual Network"
            }
        },
        "hubvnetaddressprefix": {
            "type": "string",
            "defaultValue": "10.230.0.0/24",
            "metadata": {
                "description": "Address prefix for the Hub Virtual Network "
            }
        },
        "gatewaysubnetaddressprefix": {
            "type": "string",
            "defaultValue": "10.230.0.0/27",
            "metadata": {
                "description": "Address prefix for the GatewaySubnet "
            }
        },
        "azfirewallsubnetaddressprefix": {
            "type": "string",
            "defaultValue": "10.230.0.64/26",
            "metadata": {
                "description": "Address prefix for the Azure Firewall Subnet "
            }
        },

        "azfirewallmgmntprefix": {
            "type": "string",
            "defaultValue": "10.230.0.128/26",
            "metadata": {
                "description": "Enter the CIDR address for the Hub Azure Firewall Management Subnet"
            }
        },

        "azurebastionsubnetaddressprefix": {
            "type": "string",
            "defaultValue": "10.230.0.192/26",
            "metadata": {
                "description": " AzureBastionSubnet address prefix third Subnet"
            }
        },
        "BastionPIP1": {
            "type": "string",
            "defaultValue": "Bastion-PIP1",
            "metadata": {
                "description": "Azure BastionHost Public IP Name"
            }
        },
        "Bastionname": {
            "type": "string",
            "defaultValue": "MyBastion",
            "metadata": {
                "description": "BastionHost Instance Name"
            }
        },
        "identityvnetname": {
            "type": "string",
            "defaultValue": "IDENTITY-VNET",
            "metadata": {
                "description": "Name of Virtual Network hosting Identity Workloads"
            }
        },
        "identityaddressprefix": {
            "type": "string",
            "defaultValue": "10.229.0.0/26",
            "metadata": {
                "description": "Address prefix Identity Virtual Network"
            }
        },
        "identitysubnet": {
            "type": "string",
            "defaultValue": "IDENTITY-MGMNT-SUBNET",
            "metadata": {
                "description": "Subnet name Identity Virtual Network"
            }
        },
        "identitysubnetaddressprefix": {
            "type": "string",
            "defaultValue": "10.229.0.0/26",
            "metadata": {
                "description": "Subnet address Identity Virtual Subnet"
            }
        },
        "workloadvnetname": {
            "type": "string",
            "defaultValue": "DATACENTER-VNET",
            "metadata": {
                "description": "Workload Virtual Network name"
            }
        },
        "workloaddatacenteraddressprefix": {
            "type": "string",
            "defaultValue": "10.228.0.0/24",
            "metadata": {
                "description": "Address prefix for Virtual Network"
            }
        },
        "workloadsubnet1": {
            "type": "string",
            "defaultValue": "EAST-WEB-SUBNET",
            "metadata": {
                "description": "Workload first Subnet Name"
            }
        },
        "workloadsubnet1prefix": {
            "type": "string",
            "defaultValue": "10.228.0.0/27",
            "metadata": {
                "description": "Workload first subnet datacenter prefix"
            }
        },
        "workloadsubnet2": {
            "type": "string",
            "defaultValue": "EAST-DATABASE-SUBNET",
            "metadata": {
                "description": "Workload second subnet datacenter"
            }
        },
        "workloadsubnet2prefix": {
            "type": "string",
            "defaultValue": "10.228.0.32/27",
            "metadata": {
                "description": "Workload second subnet datacenter prefix"
            }
        },

        "operationsvnetname": {
            "type": "string",
            "defaultValue": "OPERATIONS-VNET",
            "metadata": {
                "description": "Operations Virtual Network name"
            }
        },
        "operationsaddressprefix": {
            "type": "string",
            "defaultValue": "10.227.0.0/26",
            "metadata": {
                "description": "Address prefix for Virtual Operations  Network"
            }
        },
        "operationssubnet1": {
            "type": "string",
            "defaultValue": "EAST-SHARED-SERVICES-OPS-SUBNET",
            "metadata": {
                "description": "Operations shared services first Subnet Name"
            }
        },
        "operationssubnet1prefix": {
            "type": "string",
            "defaultValue": "10.227.0.0/27",
            "metadata": {
                "description": "Operations first subnet prefix"
            }
        },
        "operationssubnet2": {
            "type": "string",
            "defaultValue": "EAST-OPERATIONS-JUMPHOST-SUBNET",
            "metadata": {
                "description": "Operations second subnet name for "
            }
        },
        "operationssubnet2prefix": {
            "type": "string",
            "defaultValue": "10.227.0.32/27",
            "metadata": {
                "description": "Operations second subnet operations prefix"
            }
        },

        "routetableName1": {
            "type": "string",
            "defaultValue": "Identity-RouteTable",
            "metadata": {
                "description": "Name of the Route Table for Identity"
            }
        },
        "routetablename2": {
            "type": "string",
            "defaultValue": "Datacenter-RouteTable",
            "metadata": {
                "description": "Name of the Route for Datacenter"
            }
        },
        "routetablename3": {
            "type": "string",
            "defaultValue": "Operations-RouteTable",
            "metadata": {
                "description": "Name of the Route Table  for Operations"
            }
        },
        "nsgname1": {
            "type": "string",
            "defaultValue": "Identity-NSG-01",
            "metadata": {
                "description": "Name of the Network Secuity Group for the Identity"
            }
        },
        "nsgname2": {
            "type": "string",
            "defaultValue": "Datacenter-NSG-01",
            "metadata": {
                "description": "Name of the Network Secuity Group for the Datacenter VNET"
            }
        },
        "nsgname3": {
            "type": "string",
            "defaultValue": "Operations-NSG-01",
            "metadata": {
                "description": "Name of the Network Secuity Group for Operations VNET"
            }
        },
        "projectName": {
            "type": "string",
            "defaultValue": "Azure Datacenter",
            "metadata": {
                "description": "Name of the Project Tag"
            }
        },
        "pocname": {
            "type": "string",
            "defaultValue": "johndoe@contoso.com",
            "metadata": {
                "description": "Name of the Project Contact Tag"
            }
        },
        "gl-code": {
            "type": "string",
            "defaultValue": "Azure-Datacenter-2023-01-001A",
            "metadata": {
                "description": "Billing  Code Tag"
            }
        },
        "environment": {
            "type": "string",
            "defaultValue": "Development",
            "allowedValues": [
                "Demo",
                "Development",
                "UAT",
                "Production"
            ],
            "metadata": {
                "description": "Environment Tag"
            }
        },
        "classification": {
            "type": "string",
            "defaultValue": "Unclassified",
            "allowedValues": [
                "Unclassified",
                "Confidential",
                "Secret",
                "Top Secret"

            ],
            "metadata": {
                "description": "Environment Classification Tag"
            }
        },
        "creationdate": {
            "type": "string",
            "defaultValue": "[utcNow('u')]",
            "metadata": {
                "description": "Creation Timpestamp Tag"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location of Region Deployment"
            }
        },
        "fwname": {
            "type": "string",
            "defaultValue": "EAST-FW-01",
            "metadata": {
                "description": "The name of the Azure Firewall"
            }
        },

        "fwpollocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Firewall Policy location, placing it in the same region as the firewall"
            }

        },

        "fwprivateIp": {
            "type": "string",
            "defaultValue": "10.230.0.68",
            "metadata": {
                "description": "The name of the Azure Firewall Public IP"
            }
        },
        "fwpubIp": {
            "type": "string",
            "defaultValue": "EAST-FW-01-PIP",
            "metadata": {
                "description": "The name of the Azure Firewall Public IP"
            }
        },
        "fwpubIp2": {
            "type": "string",
            "defaultValue": "EAST-FW-01-MGMNT-PIP",
            "metadata": {
                "description": "Azure Firewall Management Public IP"
            }

        },
        "fwzones": {
            "type": "array",
            "defaultValue": [ "1", "2", "3" ],
            "metadata": {
                "description": "The Zones the of the Azure Firewall 1,2,3"
            }
        },
        "fwtier": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
            ],
            "metadata": {
                "description": "The Azure Firewall Teir"
            }
        },

        "loganalyticsworkspaceName": {
            "type": "string",
            "defaultValue": "EAST-LOGANALYTICS",
            "metadata": {
                "description": "Specify the name of the workspace."
            }
        },
        "backupvaultName": {
            "type": "string",
            "defaultValue": "EAST-BACKUPVAULT-01",
            "metadata": {
                "description": "Specify the name of the Backup Vault."
            }
        },

        "skuloganalytics": {
            "type": "string",
            "defaultValue": "PerGB2018",
            "allowedValues": [
                "CapacityReservation",
                "Free",
                "LACluster",
                "PerGB2018",
                "PerNode",
                "Premium",
                "Standalone",
                "Standard"
            ],
            "metadata": {
                "description": "Specify the pricing tier: PerGB2018 or legacy tiers (Free, Standalone, PerNode, Standard or Premium) which are not available to all customers."
            }
        },
        "retentionindays": {
            "type": "int",
            "defaultValue": "120",
            "metadata": {
                "description": "Specify the number of days to retain data."
            }
        },
        "resourcepermissions": {
            "type": "bool",
            "metadata": {
                "description": "Specify true to use resource or workspace permissions, or false to require workspace permissions."
            }
        },
        "heartbeatTableRetention": {
            "type": "int",
            "defaultValue": "30",
            "metadata": {
                "description": "Specify the number of days to retain data in Heartbeat table."
            }
        }



    },
    "functions": [],
    "variables": {
        "AzureFW": "AzureFirewallSubnet",
        "AzureFWMgmnt": "AzureFirewallManagementSubnet",
        "HubvNETtoDatacentervNETPeeringName": "[concat(parameters('hubvnetname'), '/', parameters('workloadvnetname'))]",
        "DatacentervNettoHubvNetPeeringName": "[concat(parameters('workloadvnetname'), '/', parameters('hubvnetname'))]",
        "HubvNETtoIdentityvNETPeeringName": "[concat(parameters('hubvnetname'), '/', parameters('identityvnetname'))]",
        "IdentityvNETtovNetHubvNetPeeringName": "[concat(parameters('identityvnetname'), '/', parameters('hubvnetname'))]",
        "OpsvNettoHubvNetPeeringName": "[concat(parameters('operationsvnetname'), '/', parameters('hubvnetname'))]",
        "HubvNettoOpsvNetPeeringName": "[concat(parameters('hubvnetname'), '/', parameters('operationsvnetname'))]"
    },

    "resources": [

        //Adding Network Security Groups

        {
            "name": "[parameters('nsgname1')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "nsgRule1",
                        "properties": {
                            "description": "Allow DNS TCP",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "53",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule2",
                        "properties": {
                            "description": "Allow DNS UDP",
                            "protocol": "UDP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "53",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule3",
                        "properties": {
                            "description": "Allow RDP",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "[parameters('operationssubnet2prefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule4",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[parameters('operationssubnet2prefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule5",
                        "properties": {
                            "description": "Allow 88 TCP Kerberos",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "88",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('identityaddressprefix')]",
                            "access": "Allow",
                            "priority": 135,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule6",
                        "properties": {
                            "description": "Allow 135 TCP RPC",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "135",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('identityaddressprefix')]",
                            "access": "Allow",
                            "priority": 140,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule7",
                        "properties": {
                            "description": "Allow 135 UDP RPC",
                            "protocol": "UDP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "135",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('identityaddressprefix')]",
                            "access": "Allow",
                            "priority": 145,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule8",
                        "properties": {
                            "description": "Allow 136 RPC",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "136",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('identityaddressprefix')]",
                            "access": "Allow",
                            "priority": 150,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule9",
                        "properties": {
                            "description": "Allow 136 RPC",
                            "protocol": "UDP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "136",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('identityaddressprefix')]",
                            "access": "Allow",
                            "priority": 155,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule10",
                        "properties": {
                            "description": "Allow 137 RPC",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "137",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('identityaddressprefix')]",
                            "access": "Allow",
                            "priority": 160,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule11",
                        "properties": {
                            "description": "Allow 137 UDP RPC",
                            "protocol": "UDP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "137",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('identityaddressprefix')]",
                            "access": "Allow",
                            "priority": 165,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule12",
                        "properties": {
                            "description": "Allow 138 UDP RPC",
                            "protocol": "UDP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "138",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('identityaddressprefix')]",
                            "access": "Allow",
                            "priority": 170,
                            "direction": "Inbound"
                        }
                    },

                    {
                        "name": "nsgRule13",
                        "properties": {
                            "description": "Allow 9389 TCP AD Web Services",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "9389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('identityaddressprefix')]",
                            "access": "Allow",
                            "priority": 175,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule14",
                        "properties": {
                            "description": "Allow 139 TCP RPC",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "139",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('identityaddressprefix')]",
                            "access": "Allow",
                            "priority": 180,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule15",
                        "properties": {
                            "description": "Allow 139 UDP RPC",
                            "protocol": "UDP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "139",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('identityaddressprefix')]",
                            "access": "Allow",
                            "priority": 185,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule16",
                        "properties": {
                            "description": "Allow 445 TCP RPC",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "445",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('identityaddressprefix')]",
                            "access": "Allow",
                            "priority": 190,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule17",
                        "properties": {
                            "description": "Allow 500 UDP",
                            "protocol": "UDP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "500",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('identityaddressprefix')]",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule18",
                        "properties": {
                            "description": "Allow 636 TCP LDAPS",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "636",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('identityaddressprefix')]",
                            "access": "Allow",
                            "priority": 205,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule19",
                        "properties": {
                            "description": "Allow 3268 TCP Global Catalog",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3268",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('identityaddressprefix')]",
                            "access": "Allow",
                            "priority": 210,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule20",
                        "properties": {
                            "description": "Allow 3269 TCP Global Catalog SSL",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3269",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('identityaddressprefix')]",
                            "access": "Allow",
                            "priority": 220,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule21",
                        "properties": {
                            "description": "Allow 5986 TCP WinRM HTTPS",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5986",
                            "sourceAddressPrefix": "[parameters('operationssubnet2prefix')]",
                            "destinationAddressPrefix": "[parameters('identityaddressprefix')]",
                            "access": "Allow",
                            "priority": 230,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('nsgname2')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "nsgRule1",
                        "properties": {
                            "description": "Allow Http TCP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule2",
                        "properties": {
                            "description": "Allow WinRM HTTPS ",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5986",
                            "sourceAddressPrefix": "[parameters('Workloadsubnet2prefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule3",
                        "properties": {
                            "description": "Allow MariaDB",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3306",
                            "sourceAddressPrefix": "[parameters('workloadsubnet1prefix')]",
                            "destinationAddressPrefix": "[parameters('workloadsubnet2prefix')]",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule4",
                        "properties": {
                            "description": "Allow SQL 1433 TCP",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "1433",
                            "sourceAddressPrefix": "[parameters('workloadsubnet1prefix')]",
                            "destinationAddressPrefix": "[parameters('workloadsubnet1prefix')]",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule5",
                        "properties": {
                            "description": "Allow SQL 1434 UDP Named Instances",
                            "protocol": "UDP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "1434",
                            "sourceAddressPrefix": "[parameters('workloadsubnet1prefix')]",
                            "destinationAddressPrefix": "[parameters('workloadsubnet2prefix')]",
                            "access": "Allow",
                            "priority": 135,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule6",
                        "properties": {
                            "description": "Allow RDP 3389 TCP",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "[parameters('operationssubnet2prefix')]",
                            "destinationAddressPrefix": "[parameters('workloadsubnet1prefix')]",
                            "access": "Allow",
                            "priority": 140,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule7",
                        "properties": {
                            "description": "Allow RDP 3389 TCP",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "[parameters('operationssubnet2prefix')]",
                            "destinationAddressPrefix": "[parameters('workloadsubnet2prefix')]",
                            "access": "Allow",
                            "priority": 145,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule8",
                        "properties": {
                            "description": "Allow SSH 22 TCP",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[parameters('operationssubnet2prefix')]",
                            "destinationAddressPrefix": "[parameters('workloadsubnet1prefix')]",
                            "access": "Allow",
                            "priority": 150,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "nsgRule9",
                        "properties": {
                            "description": "Allow SSH 22 TCP",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[parameters('operationssubnet2prefix')]",
                            "destinationAddressPrefix": "[parameters('workloadsubnet2prefix')]",
                            "access": "Allow",
                            "priority": 155,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('nsgname3')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "nsgRule1",
                        "properties": {
                            "description": "Allow Traffic In",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }



                ]
            }
        },

        //Adding Log Analytics

        {
            "name": "[parameters('loganalyticsworkspaceName')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2020-10-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "Name": "[parameters('loganalyticsworkspaceName')]",
                "Asset": "Azure Loganalytics",
                "POC Name": "[parameters('pocname')]",
                "Classification Label": "[parameters('classification')]",
                "Project": "[parameters('projectName')]",
                "Environment": "[parameters('environment')]",
                "Location": "[resourceGroup().location]",
                "GL-Code": "[parameters('GL-Code')]",
                "Creation Date": "[parameters('creationdate')]"

            },
            "properties": {
                "sku": {
                    "name": "[parameters('skuloganalytics')]"
                },
                "retentionInDays": "[parameters('retentionindays')]",
                "features": {
                    "enableLogAccessUsingOnlyResourcePermissions": "[parameters('resourcePermissions')]"
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/tables",
            "apiVersion": "2021-12-01-preview",
            "name": "[format('{0}/{1}', parameters('loganalyticsworkspaceName'), 'Heartbeat')]",
            "properties": {
                "retentionInDays": "[parameters('heartbeatTableRetention')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('loganalyticsworkspaceName'))]"
            ]
        },
        //Adding virtual network routetable

        {
            "name": "[parameters('routetableName1')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "Name": "[parameters('routetableName1')]",
                "Asset": "Azure Route Table",
                "POC Name": "[parameters('pocname')]",
                "Classification Label": "[parameters('classification')]",
                "Project": "[parameters('projectName')]",
                "Environment": "[parameters('environment')]",
                "Location": "[resourceGroup().location]",
                "GL-Code": "[parameters('GL-Code')]",
                "Creation Date": "[parameters('creationdate')]"

            },
            "properties": {
                "routes": [
                    {
                        "name": "RouteToDatacenterVirtualNetwork",
                        "properties": {
                            "addressPrefix": "[parameters('workloaddatacenteraddressprefix')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('fwprivateIp')]"
                        }
                    },
                    {
                        "name": "RouteToIdentityVirtualNetwork",
                        "properties": {
                            "addressPrefix": "[parameters('operationsaddressprefix')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('fwprivateIp')]"
                        }
                    },
                    {
                        "name": "RouteToInternet",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('fwprivateIp')]"
                        }
                    }

                ],
                "disableBgpRoutePropagation": true
            }
        },
        //Adding virtual network second routetable
        {
            "name": "[parameters('routetablename2')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "Name": "[parameters('routetablename2')]",
                "Asset": "Azure Route Table",
                "POC Name": "[parameters('pocname')]",
                "Classification Label": "[parameters('classification')]",
                "Project": "[parameters('projectName')]",
                "Environment": "[parameters('environment')]",
                "Location": "[resourceGroup().location]",
                "GL-Code": "[parameters('GL-Code')]",
                "Creation Date": "[parameters('creationdate')]"
            },
            "properties": {
                "routes": [
                    {
                        "name": "RouteToIdentityVirtualNetwork",
                        "properties": {
                            "addressPrefix": "[parameters('identityaddressprefix')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('fwprivateIp')]"
                        }
                    },
                    {
                        "name": "RouteToOperationsVirtualNetwork",
                        "properties": {
                            "addressPrefix": "[parameters('operationsaddressprefix')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('fwprivateIp')]"
                        }
                    },
                    {
                        "name": "RouteToInternet",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('fwprivateIp')]"
                        }
                    }

                ],
                "disableBgpRoutePropagation": true
            }
        },
        //Adding third Routetable

        {
            "name": "[parameters('routetablename3')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "Name": "[parameters('routetablename3')]",
                "Asset": "Azure Route Table",
                "POC Name": "[parameters('pocname')]",
                "Project": "[parameters('projectName')]",
                "Environment": "[parameters('environment')]",
                "Location": "[resourceGroup().location]",
                "GL-Code": "[parameters('GL-Code')]",
                "Creation Date": "[parameters('creationdate')]"

            },
            "properties": {
                "routes": [
                    {
                        "name": "RouteToDatacenterVirtualNetwork",
                        "properties": {
                            "addressPrefix": "[parameters('workloaddatacenteraddressprefix')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('fwprivateIp')]"
                        }
                    },
                    {
                        "name": "RouteToIdentityVirtualNetwork",
                        "properties": {
                            "addressPrefix": "[parameters('identityaddressprefix')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('fwprivateIp')]"
                        }
                    },
                    {
                        "name": "RouteToInternet",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('fwprivateIp')]"
                        }
                    }

                ],
                "disableBgpRoutePropagation": true
            }
        },

        //Adding Hub Virtual Network
        {
            "name": "[parameters('hubvnetname')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "Name": "[parameters('hubvnetname')]",
                "Asset": "Virtual Network",
                "POC Name": "[parameters('pocname')]",
                "Classification Label": "[parameters('classification')]",
                "Project": "[parameters('projectName')]",
                "Environment": "[parameters('environment')]",
                "Location": "[resourceGroup().location]",
                "GL-Code": "[parameters('GL-Code')]",
                "Creation Date": "[parameters('creationdate')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('hubvnetaddressprefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[parameters('gatewaysubnetaddressprefix')]"
                        }
                    },
                    {
                        "name": "AzureFirewallSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('azfirewallsubnetaddressprefix')]"
                        }
                    },
                    {
                        "name": "AzureFirewallManagementSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('azfirewallMgmntPrefix')]"
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('azurebastionsubnetaddressprefix')]"
                        }
                    }
                ]
            }
        },
        //Adding Identity Virtual Network
        {
            "name": "[parameters('identityvnetname')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/routeTables/', parameters('routetableName1'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('nsgname1'))]"
            ],
            "tags": {
                "Name": "[parameters('identityvnetname')]",
                "Asset": "Virtual Network",
                "POC Name": "[parameters('pocname')]",
                "Classification Label": "[parameters('classification')]",
                "Project": "[parameters('projectname')]",
                "Environment": "[parameters('environment')]",
                "Location": "[resourceGroup().location]",
                "GL-Code": "[parameters('GL-Code')]",
                "Creation Date": "[parameters('creationdate')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('identityaddressprefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('identitysubnet')]",
                        "properties": {
                            "addressPrefix": "[parameters('identitysubnetaddressprefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgname1'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routetableName1'))]"
                            }
                        }
                    }

                ]
            }
        },

        //Adding the Datacenter Virtual Network

        {
            "name": "[parameters('workloadvnetname')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/routeTables/', parameters('routetablename2'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('nsgname2'))]"
            ],
            "tags": {
                "Name": "[parameters('workloadvnetname')]",
                "Asset": "Virtual Network",
                "POC Name": "[parameters('pocname')]",
                "Classification Label": "[parameters('classification')]",
                "Project": "[parameters('projectname')]",
                "Environment": "[parameters('environment')]",
                "Location": "[resourceGroup().location]",
                "GL-Code": "[parameters('gl-code')]",
                "Creation Date": "[parameters('creationdate')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('workloaddatacenteraddressprefix')]"


                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('workloadsubnet1')]",
                        "properties": {
                            "addressPrefix": "[parameters('workloadsubnet1prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgname2'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routetablename2'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('workloadsubnet2')]",
                        "properties": {
                            "addressPrefix": "[parameters('workloadsubnet2prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgname2'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routetablename2'))]"
                            }
                        }
                    }
                ]
            }
        },
        //Adding Operations VNET
        {
            "name": "[parameters('operationsvnetname')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/routeTables/', parameters('routetablename3'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('nsgname3'))]"
            ],
            "tags": {
                "Name": "[parameters('operationsvnetname')]",
                "Asset": "Virtual Network",
                "POC Name": "[parameters('pocname')]",
                "Classification Label": "[parameters('classification')]",
                "Project": "[parameters('projectname')]",
                "Environment": "[parameters('environment')]",
                "Location": "[resourceGroup().location]",
                "GL-Code": "[parameters('gl-code')]",
                "Creation Date": "[parameters('creationdate')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('operationsaddressprefix')]"


                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('operationssubnet1')]",
                        "properties": {
                            "addressPrefix": "[parameters('operationssubnet1prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgname3'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routetablename3'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('operationssubnet2')]",
                        "properties": {
                            "addressPrefix": "[parameters('operationssubnet2prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgname3'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routetablename3'))]"
                            }
                        }
                    }
                ]
            }
        },

        //Inserting Azure Firewall
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[parameters('fwpubIp')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "zones": "[parameters('fwzones')]",
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "tags": {

                "Name": "[parameters('fwpubIp')]",
                "Asset": "Azure Firewall Public IP",
                "POC Name": "[parameters('pocname')]",
                "Classification Label": "[parameters('classification')]",
                "Project": "[parameters('projectname')]",
                "Environment": "[parameters('environment')]",
                "Location": "[resourceGroup().location]",
                "GL-Code": "[parameters('gl-code')]",
                "Creation Date": "[parameters('creationdate')]"


            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[parameters('FWPubIp2')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "zones": "[parameters('fwzones')]",
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "tags": {

                "Name": "[parameters('fwpubIp2')]",
                "Asset": "Azure firewall Management Public IP",
                "POC Name": "[parameters('pocname')]",
                "Classification Label": "[parameters('classification')]",
                "Project": "[parameters('projectname')]",
                "Environment": "[parameters('environment')]",
                "Location": "[resourceGroup().location]",
                "GL-Code": "[parameters('gl-code')]",
                "Creation Date": "[parameters('creationdate')]"


            }
        },
        {
            "apiVersion": "2020-11-01",
            "type": "Microsoft.Network/firewallPolicies",
            "resources": [],
            "properties": {
                "sku": {
                    "tier": "[parameters('fwtier')]"
                }

                
            },
            
            "name": "[concat(parameters('fwname'),'-Policy')]",
            "location": "[parameters('fwpollocation')]",
            "tags": {
                "Name": "[concat(parameters('fwname'),'-Policy')]",
                "Location": "[resourceGroup().location]",
                "Environment": "[parameters('environment')]",
                "Point of Contact": "[parameters('pocname')]",
                "Creation Date": "[parameters('creationdate')]"

            }
        },
        {
            "apiVersion": "2020-05-01",
            "type": "Microsoft.Network/azureFirewalls",
            "name": "[parameters('fwname')]",
            "location": "[resourceGroup().location]",
            "zones": "[if(equals(length(parameters('fwzones')), 0), json('null'), parameters('fwzones'))]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/', parameters('fwpubip2'))]",
                "[concat('Microsoft.Network/virtualnetworks/', parameters('hubvnetname'))]",
                "[concat('Microsoft.Network/firewallPolicies/', concat(parameters('fwname'),'-Policy'))]"
            ],
            "properties": {
                
                "ipConfigurations": [
                    {
                        "name": "[parameters('fwpubip')]",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualnetworks/subnets',parameters('hubvnetname'),variables('AzureFW'))]"
                            },
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('fwpubip'))]"
                            }
                        }
                    }
                ],
                "sku": {
                    "tier": "[parameters('fwtier')]"
                },
                "managementIpConfiguration": {
                    "name": "[parameters('fwpubip2')]",
                    "properties": {
                        "subnet": {
                            "id": "[resourceId('Microsoft.Network/virtualnetworks/subnets',parameters('hubvnetname'),variables('AzureFWMgmnt'))]"
                        },
                        "publicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIpAddresses/', parameters('fwpubip2'))]"
                        }
                    }
                },
                "firewallPolicy": {
                    "id": "[resourceId('Microsoft.Network/firewallPolicies', concat(parameters('fwname'),'-Policy'))]"
                }
            },
            "tags": {
                "Name": "[parameters('fwname')]",
                "Asset": "Azure Firewall",
                "POC Name": "[parameters('pocname')]",
                "Classification Label": "[parameters('classification')]",
                "Project": "[parameters('projectname')]",
                "Environment": "[parameters('environment')]",
                "Location": "[resourceGroup().location]",
                "GL-Code": "[parameters('gl-code')]",
                "Creation Date": "[parameters('creationdate')]"

            }
        },

        //Insterting Private Peering for VNET

        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[variables('HubvNETtoDatacentervNETPeeringName')]",
            "apiVersion": "2020-05-01",
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('workloadvnetname'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('workloadvnetname'))]"
            ]
        },

        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[variables('DatacentervNettoHubvNetPeeringName')]",
            "apiVersion": "2020-05-01",
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('workloadvnetname'))]"
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[variables('OpsvNettoHubvNetPeeringName')]",
            "apiVersion": "2020-05-01",
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('operationsvnetname'))]"
            ]
        },

        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[variables('HubvNettoOpsvNetPeeringName')]",
            "apiVersion": "2020-05-01",
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('operationsvnetname'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('operationsvnetname'))]"
            ]
        },

        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[variables('HubvNETtoIdentityvNETPeeringName')]",
            "apiVersion": "2020-05-01",
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('identityvnetname'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('identityvnetname'))]"
            ]
        },

        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[variables('IdentityvNETtovNetHubvNetPeeringName')]",
            "apiVersion": "2020-05-01",
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('identityvnetname'))]"
            ]
        },

        
        //Inserting BastionHost

        {
            "apiVersion": "2020-05-01",
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[parameters('BastionPIP1')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "apiVersion": "2020-05-01",
            "type": "Microsoft.Network/bastionHosts",
            "name": "[parameters('Bastionname')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses', parameters('BastionPIP1'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubvnetname'))]"

            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubvnetname'), 'AzureBastionSubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('BastionPIP1'))]"
                            }
                        }
                    }
                ]
            }
        },
        //Inserting Backup Vault

        {
            "name": "[parameters('backupvaultName')]",
            "type": "Microsoft.RecoveryServices/vaults",
            "apiVersion": "2021-03-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "Name": "[parameters('backupvaultName')]",
                "Asset": "Azure Backup Vault",
                "POC Name": "[parameters('pocname')]",
                "Classification Label": "[parameters('classification')]",
                "Project": "[parameters('projectname')]",
                "Environment": "[parameters('environment')]",
                "Location": "[resourceGroup().location]",
                "GL-Code": "[parameters('gl-code')]",
                "Creation Date": "[parameters('creationdate')]"

            },
            "sku": {
                "name": "RS0",
                "tier": "Standard"
            },
            "properties": {}
        }




    ],
    "outputs": {}
}
